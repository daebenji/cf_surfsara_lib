#
## cron.cf @SURFsara
#
bundle common cron()
{
    vars:

        any::
            ## Mustache templates
            "template_2_destination" data => parsejson('
                    {
                        "allow.mustache" : "$(allow_file)",
                        "deny.mustache" : "$(deny_file)",
                    }
                ');

        debian|centos::
            "allow_file" string => "/etc/cron.allow";
            "deny_file"  string => "/etc/cron.deny";
            "allow_owner" string => "root";
            "allow_group" string => "root";
            "allow_mode"  string => "0644";
}

bundle agent cron_autorun()
{
    meta:
         "tags" slist => { "autorun", "template_cron" };

    methods:
        "" usebundle => sara_template_autorun("cron"),
            classes => results("namespace", "cron");

    reports:
        any::
            "$(this.bundle): has been called"
                ifvarclass => "DEBUG|DEBUG_cron|DEBUG_$(this.bundle)";

}
@if minimum_version(99.9)

= cron =
[source:trunk/cfengine3/config/services/cron.cf source cron.cf]

This bundle will generate these/this file(s) from mustache templates:
 * /etc/cron.allow
 * /etc/cron.deny

If one of the files is changed then the following ""class"" will be set:
 * sara_etc_cron_allow
 * sara_etc_cron_deny

These templates are located in:
 * templates/cron
 * templates/cron/json

== Usage ==

The bundle is called with:
 * `"" usebundle => cron_autorun();`

When we do not specifiy any json data files then only `default.json` will be
read. You can specify extra json data file via:
 * def.cf
{{{
#!cf3
vars:
    any::
        "cron" slist => { "sys_users.json" };
}}}

 * def.json
{{{
#!json
{
    "vars": {
        "cron": {
            "json_files": [ "sys_users.json" ]
        }
    }
}

The variable must be ''cron_json_files'' and with this setup 1 extra json file will be  merged.

== DEBUG ==

If you want to debug this bundle set the `DEBUG_sara_user_consume_resources` class, eg:
 * `-DDEBUG_cron`

== SETUP ==
{{{
#!json
{
    "allow_users": [ "root" ],
    "deny_users": [ ]
}

=== Def Usage ===
The following must be set in host specific host file: `def.json`
{{{
#!json
    "vars": {
        "sara_services_enabled": [
            ...
            "cron",
            ...
        ],
        "cron": {
        }
    },
}}}

In def.cf/def.json you can override the ``cron`` default values, eg def.json:
{{{
#!json
{
    "vars": {
        "cron": {
            "allow_users": [ "root", "bas", "jaap" ],
            "deny_users": [ "remy"  ]
        }
    }
}
}}}
@endif
